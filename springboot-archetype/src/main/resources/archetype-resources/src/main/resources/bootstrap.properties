#Database configurations. 
#If Database connection is not required in your application then remove these properties 
#as well as spring-boot-starter-jdbc dependency from pom.xml
#Provide connection information in place of TBD.
spring.datasource.url=TBD
spring.datasource.username=TBD
spring.datasource.password=TBD
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

#set ($context = $app-name.toLowerCase())
server.contextPath=/ws/${context}
service.name=${app-name}

#Consul configurations. 
#Registering in consul catalog. 
#Below property is a switch to allow application to register to consul.
spring.cloud.consul.discovery.register=false
#Discovery in consul catalog. 
#Below property is a switch to allow application to lookup services in consul service catalog.
spring.cloud.consul.discovery.catalogServicesWatch.enabled=false
# NOTE: if you face connection issues with consul you can set to "false" both discovery and registry properties above. 
#		This will let your application start without exceptions.
#CAUTION: But use above suggestion with caution as your application might be using the information discovered from consul for further operations
#		and it might fail!
#Consul connection configurations
spring.cloud.consul.host=catl0xlas00181
spring.cloud.consul.port=8500
spring.application.name=${service.name}
spring.cloud.consul.discovery.health-check-path=${server.contextPath}/health

#DO NOT ALTER BELOW PROPERTY VALUE. Below property is set to false to prevent spring boot actuator from doing a health check on redis enpoint.
management.health.redis.enabled=false

# Below property is switch for enabling caching at runtime as it controls implementation of @EnableCaching annotation in config.
# But this doesn't mean that you don't need to configure Redis host and port.
enable.caching=false
# If you wish to use Redis cluster for caching then set below property to true and provide cluster nodes connection information 
# else set it false and provide host and port for redis server.
enable.cluster.caching=false
#redis cluster configurations for caching
spring.redis.cluster.nodes[0]=catl0xlas00170:7000
spring.redis.cluster.nodes[1]=catl0xlas00170:7001
spring.redis.cluster.nodes[2]=catl0xlas00170:7002
spring.redis.cluster.nodes[3]=catl0xlas00172:7003
spring.redis.cluster.nodes[4]=catl0xlas00172:7004
spring.redis.cluster.nodes[5]=catl0xlas00172:7005
#Redis single server configuration for caching
spring.redis.host=10.5.3.158
spring.redis.port=6379
spring.redis.pool.maxWait=20

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false
spring.main.banner-mode=off

service.resourceName=TBD
service.operationName=TBD
service.version=${app-version}

siteIdSiteCodeMapping=MAC:001|LOU:126|PEN:135|BTR:182|GAN:214|OKC:131|OMA:132|TUL:186|KAN:580|HRD:215|ROA:239|NVA:477|PHX:436|LAS:476|ORG:333|PAL:334|SAB:342|SAN:541|CON:216|RHI:238|CLE:609